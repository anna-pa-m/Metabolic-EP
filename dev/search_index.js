var documenterSearchIndex = {"docs":
[{"location":"#","page":"MetabolicEP Documentation","title":"MetabolicEP Documentation","text":"    CurrentModule = MetabolicEP\n    DocTestSetup = quote\n    using MetabolicEP\nend","category":"page"},{"location":"#","page":"MetabolicEP Documentation","title":"MetabolicEP Documentation","text":"    Modules = [MetabolicEP]","category":"page"},{"location":"#MetabolicEP.metabolicEP-Union{Tuple{T}, Tuple{AbstractArray{T,2},Array{T,1},Array{T,1},Array{T,1}}} where T<:Real","page":"MetabolicEP Documentation","title":"MetabolicEP.metabolicEP","text":"res=metabolicEP(S,b,lb,ub,...)\n\nThe output in res is of type EPout: there are several fields:\n\nμ::Vector: A parameter linked to the mean of the posterior probability\nσ::Vector: A parameter linked to the std  of the posterior probability\nav::Vector: The mean posterior probability\nva::Vector: The variance of the posterior probability\nsol::EPFields: The internal field status. From this value we can restart the sampling from a specific state.\nstatus::Symbol: either converged or unconverged.\n\nInput (required)\n\nS: MxN matrix (either sparse or dense) please note that if you input a dense version, the algorithm is slighlty more efficient. Dense matrices can be create from sparse ones with Matrix(S).\nb: a vector of M intakes/uptakes\nlb: a vector of lengh N of lower bounds.\nub: a vector of lengh N of upper bounds.\n\nInput (optional arguments).\n\nbeta (inverse temperature::Real): default 10^7;  the zero temperature algorithm is run setting beta=Inf.\nverbose (true or false): default true\ndamp (∈ (0,1) newfield = damp * oldfield + (1-damp)* newfield): default 0.9\nepsconv (convergence criterion): default 1e-6\nmaxiter (maximum number of iterations): default 2000\nmaxvar  (threshold on maximum variance): default 1e50\nminvar  (threshold on minimum variance): default 1e-50\nsolution (start from solution. Is of type EPout): default: nothing\nexpval (fix to posterior probability of mean and/or variance to values): default nothing. expval can be either at TupleFloat64Float64Int or a VectorTupleFloat64Float64Int. Values can be fixed asexpval=(02044) meaning that for flux index 4 the mean is set to 0.2 and the variance to 0.4. Fixing more values expval=(02 03 4) (04 nothing 5): in this case, we fix the posterior of flux 4 to 0.2 (mean) and 0.3 (variance), while for flux 5 we fix the mean to 0.4 and we keep the variance free.\n\n\n\n\n\n","category":"method"},{"location":"#MetabolicEP-Documentation-1","page":"MetabolicEP Documentation","title":"MetabolicEP Documentation","text":"","category":"section"},{"location":"#","page":"MetabolicEP Documentation","title":"MetabolicEP Documentation","text":"    MetabolicEP","category":"page"}]
}
